spring:
  datasource:
    username: ${DB_USERNAME:admin}
    password: ${DB_PASSWORD:admin}
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 60000
      idle-timeout: 300000
      max-lifetime: 900000
      leak-detection-threshold: 60000
  jpa:
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        use_sql_comments: false
        jdbc:
          batch_size: 25
          order_inserts: true
          order_updates: true
        
logging:
  level:
    com.example.store: INFO
    org.springframework.security: WARN
    org.hibernate: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/store-application.log
    
management:
  endpoints:
    web:
      exposure:
        include: health,metrics,prometheus,info
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true

# Redis configuration for production
spring:
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms
      jedis:
        pool:
          max-active: 20
          max-idle: 10
          min-idle: 2
          max-wait: 2000ms
  cache:
    redis:
      time-to-live: 1800000 # 30 minutes in production
      cache-null-values: false