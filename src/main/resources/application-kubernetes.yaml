spring:
  application:
    name: store-app
  
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      leak-detection-threshold: 60000
      pool-name: StoreHikariPool

  data:
    redis:
      host: ${SPRING_DATA_REDIS_HOST}
      port: ${SPRING_DATA_REDIS_PORT}
      password: ${SPRING_DATA_REDIS_PASSWORD:}
      timeout: 2000ms
      connect-timeout: 2000ms
      jedis:
        pool:
          max-active: 8
          max-wait: -1ms
          max-idle: 8
          min-idle: 0

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        generate_statistics: false
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true

  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.yaml
    contexts: kubernetes

  cache:
    type: redis
    redis:
      time-to-live: 600000

server:
  port: ${SERVER_PORT:8081}
  servlet:
    context-path: /
  tomcat:
    threads:
      max: 200
      min-spare: 10
    connection-timeout: 20000
    accept-count: 100
    max-connections: 8192

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,env,configprops,loggers
      base-path: /actuator
      path-mapping:
        health: health
        info: info
        metrics: metrics
        prometheus: prometheus
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
      group:
        liveness:
          include: livenessState,db,redis
        readiness:
          include: readinessState,db,redis
    metrics:
      enabled: true
    prometheus:
      enabled: true
    info:
      enabled: true
  metrics:
    tags:
      application: store-app
      environment: kubernetes
    export:
      prometheus:
        enabled: true
        step: 15s
        descriptions: true
        pushgateway:
          enabled: false
    distribution:
      percentiles-histogram:
        http.server.requests: true
        resilience4j.circuitbreaker.calls: true
      percentiles:
        http.server.requests: 0.50,0.95,0.99
        resilience4j.circuitbreaker.calls: 0.50,0.95,0.99
  info:
    build:
      enabled: true
    git:
      enabled: true
      mode: full
    env:
      enabled: true
    java:
      enabled: true

logging:
  level:
    com.securitease.store: INFO
    org.springframework.security: WARN
    org.springframework.web: INFO
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
    org.apache.tomcat: INFO
    org.apache.catalina: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n"
  file:
    name: /app/logs/application.log
  logback:
    rollingpolicy:
      max-file-size: 100MB
      max-history: 30
      total-size-cap: 1GB